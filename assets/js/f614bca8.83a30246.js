"use strict";(self.webpackChunkdoc_site_00=self.webpackChunkdoc_site_00||[]).push([[3858],{6422:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Server/nginx/nginx_basics","title":"Basics","description":"Installation","source":"@site/docs/Server/nginx/01_nginx_basics.md","sourceDirName":"Server/nginx","slug":"/Server/nginx/nginx_basics","permalink":"/docs/Server/nginx/nginx_basics","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"projectsSidebar","previous":{"title":"NGINX","permalink":"/docs/category/nginx-1"},"next":{"title":"Configs","permalink":"/docs/Server/nginx/nginx_configs"}}');var r=s(4848),t=s(8453);const o={sidebar_position:1},l="Basics",c={},a=[{value:"Installation",id:"installation",level:2},{value:"Directories",id:"directories",level:2},{value:"Commands",id:"commands",level:2},{value:"Sources",id:"sources",level:2}];function d(n){const e={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"basics",children:"Basics"})}),"\n",(0,r.jsx)(e.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"#!/bin/sh\r\n\r\napt-get update\r\n\r\n# install additional packages\r\napt install -y curl gnupg2 ca-certificates lsb-release \\ debian-archive-keyring\r\n\r\n# download and save nginx signing key\r\ncurl https://nginx.org/keys/nginx_signing.key | \r\n    gpg --dearmor \\ | \r\n    tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null\r\n\r\n# use lsb_release to automatically determine the OS and release name\r\nOS=$(lsb_release -is | tr '[:upper:]' '[:lower:]')\r\nRELEASE=$(lsb_release -cs)\r\necho \"deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\ \r\n    http://nginx.org/packages/${OS} ${RELEASE} nginx\" \\ | \r\n    tee /etc/apt/sources.list.d/nginx.list\r\n\r\n# install\r\napt-get update\r\napt-get install -y nginx\r\nnginx # start nginx\n"})}),"\n",(0,r.jsx)(e.h2,{id:"directories",children:"Directories"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"/etc/nginx/nginx.conf"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Global settings for worker, tuning, logging, loading dynamic modules, references"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"/etc/nginx/conf.d/"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Contains default HTTP server configurations.",(0,r.jsx)(e.br,{}),"\n","Files in this directory ending in .conf are included in the top-level http block from within the /etc/nginx/nginx.conf file. It\u2019s best practice to utilize include statements."]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"/var/log/nginx/"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"default log location"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"commands",children:"Commands"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"nginx -h"})," - Shows the NGINX help menu."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"nginx -v"})," - Shows the NGINX version."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"nginx -v"})," - Shows the NGINX version, build information, and configuration arguments, which show the modules built into the NGINX binar"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"nginx -t"})," - Tests the NGINX configuration."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"nginx -T"})," - Tests the NGINX configuration and prints the validated configuration to the screen. This command is useful when seeking support."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"nginx -s signal"})," - The ",(0,r.jsx)(e.strong,{children:"-s"})," flag sends a signal to the NGINX master process. You can send Signals such as stop, quit, reload, and reopen. The stop signal discontinues the NGINX process immediately. The quit signal stops the NGINX process after it finishes processing in-flight requests. The reload signal reloads the configuration. The reopen signal instructs NGINX to reopen logfiles."]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"nginx -s reload"})," - Reloading the NGINX configuration without stopping the server."]}),"\n",(0,r.jsx)(e.h2,{id:"sources",children:"Sources"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"NGINX Cookbook 2nd Edition"})," - Derek DeJonghe - ISBN: 978-1-098-12626-1"]}),"\n"]})]})}function g(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function o(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);